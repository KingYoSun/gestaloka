# テスト環境用のDocker Compose設定
# 本番と分離されたテスト専用のサービスを定義

services:
  # テスト用Neo4j（別ポートで起動）
  neo4j-test:
    image: neo4j:5.26-community
    container_name: gestaloka-neo4j-test
    environment:
      - NEO4J_AUTH=neo4j/test_password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms_memory_pagecache_size=512m
    ports:
      - "7475:7474"  # ブラウザ用（テスト用ポート）
      - "7688:7687"  # Bolt用（テスト用ポート）
    volumes:
      - neo4j-test-data:/data
      - neo4j-test-logs:/logs
      - neo4j-test-plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gestaloka-test-network

  # テスト用PostgreSQL（別ポートで起動）
  postgres-test:
    image: postgres:17-alpine
    container_name: gestaloka-postgres-test
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=gestaloka_test
    ports:
      - "5433:5432"  # テスト用ポート
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d gestaloka_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gestaloka-test-network

  # テスト用Redis（別ポートで起動）
  redis-test:
    image: redis:8-alpine
    container_name: gestaloka-redis-test
    ports:
      - "6380:6379"  # テスト用ポート
    volumes:
      - redis-test-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gestaloka-test-network

  # テストランナー（バックエンドテストを実行）
  test-runner:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gestaloka-test-runner
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://test_user:test_password@postgres-test:5432/gestaloka_test
      - NEO4J_URI=bolt://neo4j-test:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=test_password
      - REDIS_URL=redis://redis-test:6379
      - SECRET_KEY=test-secret-key-for-testing-only
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - GOOGLE_API_KEY=test-api-key
      - LOG_LEVEL=DEBUG
    depends_on:
      postgres-test:
        condition: service_healthy
      neo4j-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    volumes:
      - ./backend:/app
    working_dir: /app
    command: ["echo", "Test environment ready"]
    networks:
      - gestaloka-test-network

networks:
  gestaloka-test-network:
    driver: bridge

volumes:
  postgres-test-data:
  neo4j-test-data:
  neo4j-test-logs:
  neo4j-test-plugins:
  redis-test-data: