"""Add SP subscription models

Revision ID: 2ba9f043f2c5
Revises: e7df83f16da7
Create Date: 2025-07-02 03:16:09.380289

"""

import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "2ba9f043f2c5"
down_revision = "e7df83f16da7"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sp_subscriptions",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "subscription_type",
            postgresql.ENUM("BASIC", "PREMIUM", name="spsubscriptiontype", create_type=False),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "CANCELLED", "EXPIRED", "PENDING", "FAILED", name="subscriptionstatus"),
            nullable=False,
        ),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.Column("cancelled_at", sa.DateTime(), nullable=True),
        sa.Column("stripe_subscription_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("stripe_customer_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("stripe_payment_method_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("currency", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("auto_renew", sa.Boolean(), nullable=False),
        sa.Column("next_billing_date", sa.DateTime(), nullable=True),
        sa.Column("trial_end", sa.DateTime(), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_sp_subscription_status", "sp_subscriptions", ["status"], unique=False)
    op.create_index("idx_sp_subscription_stripe_id", "sp_subscriptions", ["stripe_subscription_id"], unique=False)
    op.create_index("idx_sp_subscription_user_id", "sp_subscriptions", ["user_id"], unique=False)
    op.create_table(
        "subscription_transactions",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("subscription_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("transaction_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("currency", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("stripe_payment_intent_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("stripe_invoice_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("error_message", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["sp_subscriptions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_subscription_transaction_subscription_id", "subscription_transactions", ["subscription_id"], unique=False
    )
    op.create_index(
        "idx_subscription_transaction_type", "subscription_transactions", ["transaction_type"], unique=False
    )
    op.alter_column(
        "character_exploration_progress",
        "areas_explored",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "location_connections",
        "path_type",
        existing_type=sa.Enum("DIRECT", "CURVED", "TELEPORT", "STAIRS", "ELEVATOR", name="pathtype", create_type=False),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "location_connections",
        "path_metadata",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        server_default=None,
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "location_connections",
        "path_metadata",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        server_default=sa.text("'{}'::json"),
        existing_nullable=True,
    )
    op.alter_column(
        "location_connections",
        "path_type",
        existing_type=sa.Enum("DIRECT", "CURVED", "TELEPORT", "STAIRS", "ELEVATOR", name="pathtype", create_type=False),
        server_default=sa.text("'DIRECT'::pathtype"),
        existing_nullable=False,
    )
    op.alter_column(
        "character_exploration_progress",
        "areas_explored",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        server_default=sa.text("'{}'::text[]"),
        existing_nullable=False,
    )
    op.drop_index("idx_subscription_transaction_type", table_name="subscription_transactions")
    op.drop_index("idx_subscription_transaction_subscription_id", table_name="subscription_transactions")
    op.drop_table("subscription_transactions")
    op.drop_index("idx_sp_subscription_user_id", table_name="sp_subscriptions")
    op.drop_index("idx_sp_subscription_stripe_id", table_name="sp_subscriptions")
    op.drop_index("idx_sp_subscription_status", table_name="sp_subscriptions")
    op.drop_table("sp_subscriptions")
    # ### end Alembic commands ###
