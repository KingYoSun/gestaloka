"""Add log system models - clean autogenerate

Revision ID: b7fe8593b32e
Revises: 52ba950d32b4
Create Date: 2025-06-18 16:34:23.655021

"""

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision = "b7fe8593b32e"
down_revision = "52ba950d32b4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "log_fragments",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("character_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("session_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("action_description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("keywords", sa.JSON(), nullable=True),
        sa.Column(
            "emotional_valence", sa.Enum("POSITIVE", "NEGATIVE", "NEUTRAL", name="emotionalvalence"), nullable=False
        ),
        sa.Column(
            "rarity",
            sa.Enum("COMMON", "UNCOMMON", "RARE", "EPIC", "LEGENDARY", name="logfragmentrarity"),
            nullable=False,
        ),
        sa.Column("importance_score", sa.Float(), nullable=False),
        sa.Column("context_data", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["game_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_log_fragments_character_id"), "log_fragments", ["character_id"], unique=False)
    op.create_index(op.f("ix_log_fragments_session_id"), "log_fragments", ["session_id"], unique=False)
    op.create_table(
        "completed_logs",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("creator_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("core_fragment_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("skills", sa.JSON(), nullable=True),
        sa.Column("personality_traits", sa.JSON(), nullable=True),
        sa.Column("behavior_patterns", sa.JSON(), nullable=True),
        sa.Column("contamination_level", sa.Float(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("DRAFT", "COMPLETED", "CONTRACTED", "ACTIVE", "EXPIRED", "RECALLED", name="completedlogstatus"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["core_fragment_id"],
            ["log_fragments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["characters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_completed_logs_creator_id"), "completed_logs", ["creator_id"], unique=False)
    op.create_table(
        "completed_log_sub_fragments",
        sa.Column("completed_log_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("fragment_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["completed_log_id"],
            ["completed_logs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["fragment_id"],
            ["log_fragments.id"],
        ),
        sa.PrimaryKeyConstraint("completed_log_id", "fragment_id"),
    )
    op.create_table(
        "log_contracts",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("completed_log_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("creator_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("host_character_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("activity_duration_hours", sa.Integer(), nullable=False),
        sa.Column("behavior_guidelines", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("reward_conditions", sa.JSON(), nullable=True),
        sa.Column("rewards", sa.JSON(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("PENDING", "ACTIVE", "COMPLETED", "EXPIRED", "CANCELLED", name="logcontractstatus"),
            nullable=False,
        ),
        sa.Column("activity_logs", sa.JSON(), nullable=True),
        sa.Column("performance_score", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("activated_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["completed_log_id"],
            ["completed_logs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["characters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["host_character_id"],
            ["characters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_log_contracts_completed_log_id"), "log_contracts", ["completed_log_id"], unique=False)
    op.create_index(op.f("ix_log_contracts_creator_id"), "log_contracts", ["creator_id"], unique=False)
    op.create_index(op.f("ix_log_contracts_host_character_id"), "log_contracts", ["host_character_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_log_contracts_host_character_id"), table_name="log_contracts")
    op.drop_index(op.f("ix_log_contracts_creator_id"), table_name="log_contracts")
    op.drop_index(op.f("ix_log_contracts_completed_log_id"), table_name="log_contracts")
    op.drop_table("log_contracts")
    op.drop_table("completed_log_sub_fragments")
    op.drop_index(op.f("ix_completed_logs_creator_id"), table_name="completed_logs")
    op.drop_table("completed_logs")
    op.drop_index(op.f("ix_log_fragments_session_id"), table_name="log_fragments")
    op.drop_index(op.f("ix_log_fragments_character_id"), table_name="log_fragments")
    op.drop_table("log_fragments")

    # Drop ENUMs that were created automatically
    op.execute("DROP TYPE IF EXISTS logcontractstatus")
    op.execute("DROP TYPE IF EXISTS completedlogstatus")
    op.execute("DROP TYPE IF EXISTS logfragmentrarity")
    op.execute("DROP TYPE IF EXISTS emotionalvalence")
    # ### end Alembic commands ###
