"""Remove LogContract model and table

Revision ID: e7df83f16da7
Revises: 827abea3f8da
Create Date: 2025-07-01 06:41:31.317631

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = 'e7df83f16da7'
down_revision = '827abea3f8da'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_log_contracts_completed_log_id', table_name='log_contracts')
    op.drop_index('ix_log_contracts_creator_id', table_name='log_contracts')
    op.drop_index('ix_log_contracts_host_character_id', table_name='log_contracts')
    op.drop_table('log_contracts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('log_contracts',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('completed_log_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('creator_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('host_character_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('activity_duration_hours', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('behavior_guidelines', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('reward_conditions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('rewards', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'ACTIVE', 'DEPLOYED', 'COMPLETED', 'EXPIRED', 'CANCELLED', name='logcontractstatus', create_type=False), autoincrement=False, nullable=False),
    sa.Column('activity_logs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('performance_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('activated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['completed_log_id'], ['completed_logs.id'], name='log_contracts_completed_log_id_fkey'),
    sa.ForeignKeyConstraint(['creator_id'], ['characters.id'], name='log_contracts_creator_id_fkey'),
    sa.ForeignKeyConstraint(['host_character_id'], ['characters.id'], name='log_contracts_host_character_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='log_contracts_pkey')
    )
    op.create_index('ix_log_contracts_host_character_id', 'log_contracts', ['host_character_id'], unique=False)
    op.create_index('ix_log_contracts_creator_id', 'log_contracts', ['creator_id'], unique=False)
    op.create_index('ix_log_contracts_completed_log_id', 'log_contracts', ['completed_log_id'], unique=False)
    # ### end Alembic commands ###
