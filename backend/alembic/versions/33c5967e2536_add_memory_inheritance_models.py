"""Add memory inheritance models

Revision ID: 33c5967e2536
Revises: 5470d17eaf18
Create Date: 2025-07-02 16:43:43.565927

"""

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision = "33c5967e2536"
down_revision = "5470d17eaf18"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "items",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "item_type",
            sa.Enum("WEAPON", "ARMOR", "ACCESSORY", "CONSUMABLE", "SPECIAL", "MATERIAL", name="itemtype"),
            nullable=False,
        ),
        sa.Column(
            "rarity", sa.Enum("COMMON", "UNCOMMON", "RARE", "EPIC", "LEGENDARY", name="itemrarity"), nullable=False
        ),
        sa.Column("effects", sa.JSON(), nullable=False),
        sa.Column("tradeable", sa.Boolean(), nullable=False),
        sa.Column("stackable", sa.Boolean(), nullable=False),
        sa.Column("max_stack", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_items_name"), "items", ["name"], unique=False)
    op.create_table(
        "character_items",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("character_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("item_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("obtained_at", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_equipped", sa.Boolean(), nullable=False),
        sa.Column("slot", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["items.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_character_items_character_id"), "character_items", ["character_id"], unique=False)
    op.create_index(op.f("ix_character_items_item_id"), "character_items", ["item_id"], unique=False)
    op.create_table(
        "character_skills",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("character_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("skill_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("experience", sa.Integer(), nullable=False),
        sa.Column("unlocked_at", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["skill_id"],
            ["skills.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_character_skills_character_id"), "character_skills", ["character_id"], unique=False)
    op.create_index(op.f("ix_character_skills_id"), "character_skills", ["id"], unique=False)
    op.create_index(op.f("ix_character_skills_skill_id"), "character_skills", ["skill_id"], unique=False)
    op.create_table(
        "character_titles",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("character_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("acquired_at", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("effects", sa.JSON(), nullable=False),
        sa.Column("is_equipped", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_character_titles_character_id"), "character_titles", ["character_id"], unique=False)
    op.add_column("characters", sa.Column("character_metadata", sa.JSON(), nullable=True))
    op.add_column("skills", sa.Column("skill_type", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
    op.add_column("skills", sa.Column("base_power", sa.Integer(), nullable=False))
    op.add_column("skills", sa.Column("sp_cost", sa.Integer(), nullable=False))
    op.add_column("skills", sa.Column("cooldown_turns", sa.Integer(), nullable=False))
    op.alter_column("skills", "description", existing_type=sa.VARCHAR(length=500), nullable=False)
    op.drop_index("ix_skills_character_id", table_name="skills")
    op.drop_index("ix_skills_name", table_name="skills")
    op.create_index(op.f("ix_skills_name"), "skills", ["name"], unique=True)
    op.drop_constraint("skills_character_id_fkey", "skills", type_="foreignkey")
    op.drop_column("skills", "character_id")
    op.drop_column("skills", "level")
    op.drop_column("skills", "is_active")
    op.drop_column("skills", "experience")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("skills", sa.Column("experience", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("skills", sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column("skills", sa.Column("level", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("skills", sa.Column("character_id", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key("skills_character_id_fkey", "skills", "characters", ["character_id"], ["id"])
    op.drop_index(op.f("ix_skills_name"), table_name="skills")
    op.create_index("ix_skills_name", "skills", ["name"], unique=False)
    op.create_index("ix_skills_character_id", "skills", ["character_id"], unique=False)
    op.alter_column("skills", "description", existing_type=sa.VARCHAR(length=500), nullable=True)
    op.drop_column("skills", "cooldown_turns")
    op.drop_column("skills", "sp_cost")
    op.drop_column("skills", "base_power")
    op.drop_column("skills", "skill_type")
    op.drop_column("characters", "character_metadata")
    op.drop_index(op.f("ix_character_titles_character_id"), table_name="character_titles")
    op.drop_table("character_titles")
    op.drop_index(op.f("ix_character_skills_skill_id"), table_name="character_skills")
    op.drop_index(op.f("ix_character_skills_id"), table_name="character_skills")
    op.drop_index(op.f("ix_character_skills_character_id"), table_name="character_skills")
    op.drop_table("character_skills")
    op.drop_index(op.f("ix_character_items_item_id"), table_name="character_items")
    op.drop_index(op.f("ix_character_items_character_id"), table_name="character_items")
    op.drop_table("character_items")
    op.drop_index(op.f("ix_items_name"), table_name="items")
    op.drop_table("items")
    # ### end Alembic commands ###
