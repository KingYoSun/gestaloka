"""Add encounter story system for quest development

Revision ID: 1767f598eb6e
Revises: 33c5967e2536
Create Date: 2025-07-04 08:14:39.275293

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = "1767f598eb6e"
down_revision = "33c5967e2536"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "encounter_stories",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("character_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("encounter_entity_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "encounter_type",
            sa.Enum("LOG_NPC", "PERSISTENT_NPC", "OTHER_PLAYER", "LOG_ENCOUNTER", name="encountertype"),
            nullable=False,
        ),
        sa.Column(
            "story_arc_type",
            sa.Enum(
                "QUEST_CHAIN",
                "RIVALRY",
                "ALLIANCE",
                "MENTORSHIP",
                "ROMANCE",
                "MYSTERY",
                "CONFLICT",
                "COLLABORATION",
                name="storyarctype",
            ),
            nullable=False,
        ),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("current_chapter", sa.Integer(), nullable=False),
        sa.Column("total_chapters", sa.Integer(), nullable=True),
        sa.Column(
            "relationship_status",
            sa.Enum(
                "INITIAL",
                "DEVELOPING",
                "ESTABLISHED",
                "DEEPENING",
                "TRANSFORMED",
                "CONCLUDED",
                name="relationshipstatus",
            ),
            nullable=False,
        ),
        sa.Column("relationship_depth", sa.Float(), nullable=False),
        sa.Column("trust_level", sa.Float(), nullable=False),
        sa.Column("conflict_level", sa.Float(), nullable=False),
        sa.Column("story_beats", sa.JSON(), nullable=True),
        sa.Column("shared_memories", sa.JSON(), nullable=True),
        sa.Column("pending_plot_threads", sa.JSON(), nullable=True),
        sa.Column("active_quest_ids", sa.JSON(), nullable=True),
        sa.Column("completed_quest_ids", sa.JSON(), nullable=True),
        sa.Column("world_impact", sa.JSON(), nullable=True),
        sa.Column("character_growth", sa.JSON(), nullable=True),
        sa.Column("narrative_tension", sa.Float(), nullable=False),
        sa.Column("emotional_resonance", sa.Float(), nullable=False),
        sa.Column("story_momentum", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_interaction_at", sa.DateTime(), nullable=False),
        sa.Column("next_expected_beat", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_encounter_stories_character_id"), "encounter_stories", ["character_id"], unique=False)
    op.create_index(
        op.f("ix_encounter_stories_encounter_entity_id"), "encounter_stories", ["encounter_entity_id"], unique=False
    )
    op.create_index(op.f("ix_encounter_stories_id"), "encounter_stories", ["id"], unique=False)
    op.create_table(
        "encounter_choices",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("story_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("session_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("situation_context", sa.Text(), nullable=True),
        sa.Column("available_choices", sa.JSON(), nullable=True),
        sa.Column("player_choice", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("choice_reasoning", sa.Text(), nullable=True),
        sa.Column("immediate_consequence", sa.Text(), nullable=True),
        sa.Column("long_term_impact", sa.JSON(), nullable=True),
        sa.Column("relationship_change", sa.JSON(), nullable=True),
        sa.Column("presented_at", sa.DateTime(), nullable=False),
        sa.Column("decided_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["game_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["story_id"],
            ["encounter_stories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_encounter_choices_id"), "encounter_choices", ["id"], unique=False)
    op.create_index(op.f("ix_encounter_choices_session_id"), "encounter_choices", ["session_id"], unique=False)
    op.create_index(op.f("ix_encounter_choices_story_id"), "encounter_choices", ["story_id"], unique=False)
    op.create_table(
        "shared_quests",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("quest_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("story_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("participants", sa.JSON(), nullable=True),
        sa.Column("leader_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("cooperation_level", sa.Float(), nullable=False),
        sa.Column("sync_level", sa.Float(), nullable=False),
        sa.Column("contribution_balance", sa.JSON(), nullable=True),
        sa.Column("shared_objectives", sa.JSON(), nullable=True),
        sa.Column("synchronized_actions", sa.JSON(), nullable=True),
        sa.Column("conflict_points", sa.JSON(), nullable=True),
        sa.Column("reward_distribution", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_sync_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["quest_id"],
            ["quests.id"],
        ),
        sa.ForeignKeyConstraint(
            ["story_id"],
            ["encounter_stories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_shared_quests_id"), "shared_quests", ["id"], unique=False)
    op.create_index(op.f("ix_shared_quests_quest_id"), "shared_quests", ["quest_id"], unique=False)
    op.create_index(op.f("ix_shared_quests_story_id"), "shared_quests", ["story_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_shared_quests_story_id"), table_name="shared_quests")
    op.drop_index(op.f("ix_shared_quests_quest_id"), table_name="shared_quests")
    op.drop_index(op.f("ix_shared_quests_id"), table_name="shared_quests")
    op.drop_table("shared_quests")
    op.drop_index(op.f("ix_encounter_choices_story_id"), table_name="encounter_choices")
    op.drop_index(op.f("ix_encounter_choices_session_id"), table_name="encounter_choices")
    op.drop_index(op.f("ix_encounter_choices_id"), table_name="encounter_choices")
    op.drop_table("encounter_choices")
    op.drop_index(op.f("ix_encounter_stories_id"), table_name="encounter_stories")
    op.drop_index(op.f("ix_encounter_stories_encounter_entity_id"), table_name="encounter_stories")
    op.drop_index(op.f("ix_encounter_stories_character_id"), table_name="encounter_stories")
    op.drop_table("encounter_stories")
    # ### end Alembic commands ###
