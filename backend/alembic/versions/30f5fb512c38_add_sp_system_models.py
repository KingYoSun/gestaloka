"""Add SP system models

Revision ID: 30f5fb512c38
Revises: c8ab2c1be277
Create Date: 2025-06-22 02:42:31.809583

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '30f5fb512c38'
down_revision = 'c8ab2c1be277'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('player_sp',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('current_sp', sa.Integer(), nullable=False),
    sa.Column('total_earned_sp', sa.Integer(), nullable=False),
    sa.Column('total_consumed_sp', sa.Integer(), nullable=False),
    sa.Column('total_purchased_sp', sa.Integer(), nullable=False),
    sa.Column('total_purchase_amount', sa.Integer(), nullable=False),
    sa.Column('active_subscription', sa.Enum('BASIC', 'PREMIUM', name='spsubscriptiontype'), nullable=True),
    sa.Column('subscription_expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_daily_recovery_at', sa.DateTime(), nullable=True),
    sa.Column('consecutive_login_days', sa.Integer(), nullable=False),
    sa.Column('last_login_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', name='uq_player_sp_user_id')
    )
    op.create_index(op.f('ix_player_sp_id'), 'player_sp', ['id'], unique=False)
    op.create_index(op.f('ix_player_sp_user_id'), 'player_sp', ['user_id'], unique=False)
    op.create_table('sp_transactions',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('player_sp_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('transaction_type', sa.Enum('DAILY_RECOVERY', 'PURCHASE', 'ACHIEVEMENT', 'EVENT_REWARD', 'LOG_RESULT', 'LOGIN_BONUS', 'REFUND', 'FREE_ACTION', 'LOG_DISPATCH', 'LOG_ENHANCEMENT', 'SYSTEM_FUNCTION', 'ADJUSTMENT', 'MIGRATION', name='sptransactiontype'), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('balance_before', sa.Integer(), nullable=False),
    sa.Column('balance_after', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('transaction_metadata', sa.JSON(), nullable=True),
    sa.Column('related_entity_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('related_entity_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('purchase_package', sa.Enum('SMALL', 'MEDIUM', 'LARGE', 'EXTRA_LARGE', 'MEGA', name='sppurchasepackage'), nullable=True),
    sa.Column('purchase_amount', sa.Integer(), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_transaction_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['player_sp_id'], ['player_sp.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sp_transactions_created_at'), 'sp_transactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_sp_transactions_id'), 'sp_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_sp_transactions_payment_transaction_id'), 'sp_transactions', ['payment_transaction_id'], unique=False)
    op.create_index(op.f('ix_sp_transactions_player_sp_id'), 'sp_transactions', ['player_sp_id'], unique=False)
    op.create_index(op.f('ix_sp_transactions_related_entity_id'), 'sp_transactions', ['related_entity_id'], unique=False)
    op.create_index(op.f('ix_sp_transactions_transaction_type'), 'sp_transactions', ['transaction_type'], unique=False)
    op.create_index(op.f('ix_sp_transactions_user_id'), 'sp_transactions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sp_transactions_user_id'), table_name='sp_transactions')
    op.drop_index(op.f('ix_sp_transactions_transaction_type'), table_name='sp_transactions')
    op.drop_index(op.f('ix_sp_transactions_related_entity_id'), table_name='sp_transactions')
    op.drop_index(op.f('ix_sp_transactions_player_sp_id'), table_name='sp_transactions')
    op.drop_index(op.f('ix_sp_transactions_payment_transaction_id'), table_name='sp_transactions')
    op.drop_index(op.f('ix_sp_transactions_id'), table_name='sp_transactions')
    op.drop_index(op.f('ix_sp_transactions_created_at'), table_name='sp_transactions')
    op.drop_table('sp_transactions')
    op.drop_index(op.f('ix_player_sp_user_id'), table_name='player_sp')
    op.drop_index(op.f('ix_player_sp_id'), table_name='player_sp')
    op.drop_table('player_sp')
    # ### end Alembic commands ###