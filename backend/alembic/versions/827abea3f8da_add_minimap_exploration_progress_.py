"""Add minimap exploration progress tracking

Revision ID: 827abea3f8da
Revises: 2d1728c7de59
Create Date: 2025-07-01 03:07:46.977430

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = "827abea3f8da"
down_revision = "2d1728c7de59"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create ENUM type for path_type
    pathtype_enum = sa.Enum("DIRECT", "CURVED", "TELEPORT", "STAIRS", "ELEVATOR", name="pathtype")
    pathtype_enum.create(op.get_bind(), checkfirst=True)

    op.create_table(
        "character_exploration_progress",
        sa.Column("id", sa.String(length=36), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("character_id", sa.String(length=36), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.Column("exploration_percentage", sa.Integer(), nullable=False),
        sa.Column("fog_revealed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("fully_explored_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("areas_explored", sa.ARRAY(sa.String()), server_default=sa.text("'{}'::text[]"), nullable=False),
        sa.Column(
            "created_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.ForeignKeyConstraint(["character_id"], ["characters.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["location_id"], ["locations.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "action_logs",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("session_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("character_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("action_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("action_content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("response_content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("performance_data", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["game_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_action_logs_character_id"), "action_logs", ["character_id"], unique=False)
    op.create_index(op.f("ix_action_logs_session_id"), "action_logs", ["session_id"], unique=False)
    op.add_column(
        "location_connections", sa.Column("path_type", pathtype_enum, server_default="DIRECT", nullable=False)
    )
    op.add_column("location_connections", sa.Column("path_metadata", sa.JSON(), server_default="{}", nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("location_connections", "path_metadata")
    op.drop_column("location_connections", "path_type")

    # Drop ENUM type
    pathtype_enum = sa.Enum("DIRECT", "CURVED", "TELEPORT", "STAIRS", "ELEVATOR", name="pathtype")
    pathtype_enum.drop(op.get_bind(), checkfirst=True)

    op.drop_index(op.f("ix_action_logs_session_id"), table_name="action_logs")
    op.drop_index(op.f("ix_action_logs_character_id"), table_name="action_logs")
    op.drop_table("action_logs")
    op.drop_table("character_exploration_progress")
    # ### end Alembic commands ###
