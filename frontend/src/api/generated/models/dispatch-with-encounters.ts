/* tslint:disable */
/* eslint-disable */
/**
 * GESTALOKA API
 * マルチプレイ・テキストMMO - ゲスタロカ API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { DispatchEncounterRead } from './dispatch-encounter-read';
// May contain unused imports in some cases
// @ts-ignore
import type { DispatchObjectiveType } from './dispatch-objective-type';
// May contain unused imports in some cases
// @ts-ignore
import type { DispatchStatus } from './dispatch-status';

/**
 * 遭遇記録を含む派遣情報
 * @export
 * @interface DispatchWithEncounters
 */
export interface DispatchWithEncounters {
    /**
     * 派遣する完成ログのID
     * @type {string}
     * @memberof DispatchWithEncounters
     */
    'completed_log_id': string;
    /**
     * 派遣するキャラクターのID
     * @type {string}
     * @memberof DispatchWithEncounters
     */
    'dispatcher_id': string;
    /**
     * 派遣目的
     * @type {DispatchObjectiveType}
     * @memberof DispatchWithEncounters
     */
    'objective_type': DispatchObjectiveType;
    /**
     * 具体的な目的の説明
     * @type {string}
     * @memberof DispatchWithEncounters
     */
    'objective_detail': string;
    /**
     * 初期スポーン地点
     * @type {string}
     * @memberof DispatchWithEncounters
     */
    'initial_location': string;
    /**
     * 派遣期間（日）
     * @type {number}
     * @memberof DispatchWithEncounters
     */
    'dispatch_duration_days': number;
    /**
     * 
     * @type {string}
     * @memberof DispatchWithEncounters
     */
    'id': string;
    /**
     * 消費SP
     * @type {number}
     * @memberof DispatchWithEncounters
     */
    'sp_cost': number;
    /**
     * 
     * @type {DispatchStatus}
     * @memberof DispatchWithEncounters
     */
    'status': DispatchStatus;
    /**
     * 時系列の活動記録
     * @type {Array<object>}
     * @memberof DispatchWithEncounters
     */
    'travel_log': Array<object>;
    /**
     * 収集したアイテム
     * @type {Array<object>}
     * @memberof DispatchWithEncounters
     */
    'collected_items': Array<object>;
    /**
     * 発見した場所
     * @type {Array<string>}
     * @memberof DispatchWithEncounters
     */
    'discovered_locations': Array<string>;
    /**
     * SP還元量
     * @type {number}
     * @memberof DispatchWithEncounters
     */
    'sp_refund_amount': number;
    /**
     * 達成度スコア（0.0-1.0）
     * @type {number}
     * @memberof DispatchWithEncounters
     */
    'achievement_score': number;
    /**
     * 
     * @type {Date}
     * @memberof DispatchWithEncounters
     */
    'created_at': Date;
    /**
     * 
     * @type {Date}
     * @memberof DispatchWithEncounters
     */
    'dispatched_at': Date | null;
    /**
     * 
     * @type {Date}
     * @memberof DispatchWithEncounters
     */
    'expected_return_at': Date | null;
    /**
     * 
     * @type {Date}
     * @memberof DispatchWithEncounters
     */
    'actual_return_at': Date | null;
    /**
     * 遭遇記録一覧
     * @type {Array<DispatchEncounterRead>}
     * @memberof DispatchWithEncounters
     */
    'encounters': Array<DispatchEncounterRead>;
}



