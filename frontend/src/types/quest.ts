// Quest関連の型定義
// 自動生成された型を再エクスポート
export { 
  QuestStatus, 
  QuestOrigin, 
  type Quest,
  type QuestProposal as AutoGeneratedQuestProposal
} from '@/api/generated/models'

// 旧型定義（後方互換性のため）
export enum OldQuestStatus {
  PROPOSED = 'PROPOSED',
  ACTIVE = 'ACTIVE',
  PROGRESSING = 'PROGRESSING',
  NEAR_COMPLETION = 'NEAR_COMPLETION',
  COMPLETED = 'COMPLETED',
  ABANDONED = 'ABANDONED',
  FAILED = 'FAILED',
}

export enum OldQuestOrigin {
  GM_PROPOSED = 'GM_PROPOSED',
  PLAYER_DECLARED = 'PLAYER_DECLARED',
  BEHAVIOR_INFERRED = 'BEHAVIOR_INFERRED',
  NPC_GIVEN = 'NPC_GIVEN',
  WORLD_EVENT = 'WORLD_EVENT',
}

// 拡張された型定義（自動生成型に追加のプロパティ）
import type { QuestOrigin as QuestOriginType } from '@/api/generated/models'
import type { Quest as QuestType } from '@/api/generated/models'

export interface QuestProposal {
  title: string
  description: string
  origin: QuestOriginType
  rationale: string
  key_themes: string[]
}

export interface CreateQuestRequest {
  title: string
  description: string
  origin: QuestOriginType
  session_id?: string
}

export interface QuestListResponse {
  quests: QuestType[]
  total: number
  limit: number
  offset: number
}

// ステータスの表示用マッピング
export const QuestStatusDisplay: Record<string, string> = {
  'proposed': '提案中',
  'active': '進行中',
  'progressing': '進展あり',
  'near_completion': '完了間近',
  'completed': '完了',
  'abandoned': '放棄',
  'failed': '失敗',
}

// 起源の表示用マッピング
export const QuestOriginDisplay: Record<string, string> = {
  'gm_proposed': 'GMからの提案',
  'player_declared': 'プレイヤー宣言',
  'behavior_inferred': '行動から推測',
  'npc_given': 'NPCから受領',
  'world_event': '世界イベント',
}
